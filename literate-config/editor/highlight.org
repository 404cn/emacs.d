* cl-lib-highlight

#+begin_src elisp
  (straight-use-package 'cl-lib-highlight)
  (after! emacs-lisp-mode
    (use-package cl-lib-highlight
      :config
      (cl-lib-highlight-initialize)))
#+end_src

* Color Identifiers Mode

#+begin_src elisp
  (straight-use-package 'color-identifiers-mode)
  (use-package color-identifiers-mode
    :defer t
    :hook ((prog-mode . color-identifiers-mode)))
#+end_src

* hl-line

#+begin_src elisp
  (straight-use-package 'hl-line)
  (use-package hl-line
    :defer t
    :hook ((after-init . global-hl-line-mode)))
#+end_src

* Highlight Indent Guides

#+begin_src elisp

* Highlight Number

#+begin_src elisp
  ;; (straight-use-package 'highlight-numbers)
  ;; (use-package highlight-numbers
  ;;   :disabled t
  ;;   :ghook '(after-init-hook prog-mode-hook text-mode-hook org-mode-hook))
  (when *highlight-indent-guides*
    (straight-use-package 'highlight-indent-guides)
    (use-package highlight-indent-guides
      :init (gsetq highlight-indent-guides-responsive nil
                   highlight-indent-guides-delay      0.5)
      :ghook '(prog-mode-hook text-mode-hook org-mode-hook)))
#+end_src

* Rainbow-Mode

#+begin_src elisp
  (straight-use-package 'rainbow-mode)
  (use-package rainbow-mode
    :hook (((after-init
             text-mode
             org-mode
             css-mode
             html-mode
             prog-mode). rainbow-mode))
    :diminish rainbow-mode)
#+end_src
