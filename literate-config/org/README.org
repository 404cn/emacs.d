#+begin_src elisp :exports none
  ;;----------------------------------------------------------------------------
  ;; Org Mode
  ;;----------------------------------------------------------------------------
#+end_src

* Load

I use ~org~ with ~org-plus-contrib~

#+begin_src elisp
  (straight-use-package 'org-plus-contrib)
#+end_src

* Basic Configs

#+include: "basic.org"

* Org Agenda

#+include: "agenda.org"

* Org Bullets

#+begin_src elisp
  (straight-use-package 'org-bullets)
  (use-package org-bullets
    :preface
    (defun nasy/org-bullets-mode ()
      (org-bullets-mode 1))
    :hook ((org-mode . nasy/org-bullets-mode))
    :init (gsetq org-bullets-bullet-list
                 '(;;; Large
                   "♥"
                   "✿"
                   "❀"
                   "◉"
                   "✸"
                   "•")))
                   ;; ♥ ● ○ ◇ ✚ ✜ ☯ ◆ ♠ ♣ ♦ ☢ ❀ ◆ ◖ ▶
                   ;;; Small
                   ;; ► • ★ ▸

#+end_src

* Org Capture

#+include: "capture.org"

* Org Cliplink

#+begin_src elisp
  (straight-use-package 'org-cliplink)
#+end_src

* Org clock

#+include: "clock.org"

* Org Extra Jar -- ob-ditaa & ob-plantuml

#+include: "extra-jar.org"

* Org PDF view

#+begin_src elisp
  (straight-use-package 'org-pdfview)
#+end_src

* Org Pomodoro

#+begin_src elisp
  (use-package org-pomodoro
    :defer t
    :init (gsetq org-pomodoro-keep-killed-pomodoro-time t)
    :bind (:map org-agenda-mode-map
                ("P" . org-pomodoro)))
#+end_src

* Org Toc

#+begin_src elisp
  (straight-use-package 'toc-org)
#+end_src

* Org Wc

#+begin_src elisp
  (straight-use-package 'org-wc)
#+end_src
