#+begin_src elisp
  (straight-use-package 'dashboard)
  (use-package dashboard
    :bind
    ;; https://github.com/rakanalh/emacs-dashboard/issues/45
    :diminish (dashboard-mode page-break-lines-mode)
    :hook ((dashboard-mode . (lambda () (gsetq-local tab-width 1))))
    :init
    (general-define-key
     "<f5>" 'nasy/dashboard-refresh)
    (general-define-key
     :keymaps 'dashboard-mode-map
     "<down-mouse-1>" nil
     "<mouse-1>"      'widget-button-click
     "<mouse-2>"      'widget-button-click
     "<up>"           'widget-backward
     "<down>"         'widget-forward)
    (gsetq dashboard-startup-banner    (concat user-emacs-directory "ue.png")
           dashboard-center-content    t
           dashboard-show-shortcuts    t
           dashboard-set-heading-icons t
           dashboard-set-file-icons    t
           dashboard-set-init-info     t
           show-week-agenda-p          t
           dashboard-set-navigator     t
           dashboard-org-agenda-categories '("Calendar" "Tasks" "Appointments"))
    (setq dashboard-navigator-buttons
          `(;; line1
            ((,(all-the-icons-octicon "mark-github" :height 1.1 :v-adjust 0.0)
              "Source"
              "Source Page"
              (lambda (&rest _) (browse-url "https://github.com/nasyxx/emacs.d/")))
             (,(all-the-icons-octicon "gear" :height 1.1 :v-adjust 0.0)
              "Config"
              "Config File"
              (lambda (&rest _) (let ((upath (expand-file-name "custom/user-config.el" user-emacs-directory))
                                 (epath (expand-file-name "custom/user-config-example.el" user-emacs-directory)))
                             (when (and (file-exists-p epath)
                                       (not (file-exists-p upath)))
                               (copy-file epath upath))
                             (find-file upath))))
             (,(all-the-icons-octicon "book" :height 1.1 :v-adjust 0.0)
              "Document"
              "Document Page"
              (lambda (&rest _) (browse-url "https://emacs.nasy.moe/"))))))
    (defun nasy/dashboard-refresh ()
      "Refresh dashboard buffer."
      (interactive)
      (unless (get-buffer dashboard-buffer-name)
        (generate-new-buffer "*dashboard*"))
      (dashboard-refresh-buffer))
    :config
    (dashboard-setup-startup-hook)
    (gsetq dashboard-items '((recents   . 10)
                             (bookmarks . 5)
                             ;; (registers . 5 )
                             ;; (agenda    . 5)
                             (projects  . 10)))
    (advice-add 'dashboard-next-line :after #'(lambda (&rest r) (forward-char 2)))
    (advice-add 'widget-forward :after #'(lambda (&rest r) (forward-char 2))))
#+end_src
